



---------------------------------------------------------------
Branchen: feature/readme

Improve ProductListView styling for readability
Add TextTrimming="CharacterEllipsis" with TextWrapping="NoWrap" on long text columns (Name, Category, Manufacturer).
Add ToolTip bindings to show full text when truncated.
Add ListView ItemContainerStyle with Padding=0 to align headers and rows precisely.
Remove ListView border by setting BorderThickness="0" and BorderBrush="Transparent" to avoid extra lines between header and list.
Remove unconditional FallbackValueTextStyle from Category/Manufacturer cells.- and add local style triggers to set gray/italic only when Text == "Ej inlagd".
Right-align price column and use tabular numerals (TextAlignment="Right", Typography.NumeralAlignment="Tabular")


Handle OperationCanceledException consistently
Let repositories bubble up OperationCanceledException instead of mapping it to errors. 
Catch it in ProductService methods and map to status code 408 with clear cancellation messages.



På pris förklara:
TextAlignment="Right" Typography.NumeralAlignment="Tabular"



•	TextTrimming="CharacterEllipsis": Kortar text med … när den inte får plats.
•	TextWrapping="NoWrap": Tvingar en rad (krävs för att ellips ska visas).
•	ToolTip="{Binding Name}": Visar fullständig text vid hover, praktiskt när ellips döljer slutet.
•	Behöll ItemContainerStyle med Padding=0 för att rubriker och rader ska linjera exakt.

Redan commitat:

Refactor: change ProductEdit- and AddView button-text from Avbryt to Tillbaka.
Refactor: change HideStatusSoonAsync to ClearStatusAfterAsync.
Refactor: move status message logic (StatusMessage, StatusColor, ClearStatusAfterAsync) into StatusViewModelBase to avid repetition

fix: make Avbryt-button responsive and actually cancel refresh - clean up layout
Add CancelRefresh-method in ProductListViewModel that directly calls RefreshCommand.Cancel() and bind Avbryt-button to it for reliable cancel. 
Add await Task.Yield to let the UI render before starting the reload-work, so buttons are clickable immediately.
In PopulateProductListAsync, yield after ProductList.Clear and check ct.ThrowIfCancellationRequested() while adding items to keep UI responsive and cancelable. 

- Add LoadCommand.Execute(null). Automaticcaly load the list on startup
- Add catch (OperationCanceledException) to LoadAsync, to adress user 
- Add RefreshAsync-method to ProductListViewModel to separate load and reload-command
- Add HideStatusSoon to handle statusmeddelanden
- Add Ladda om/Avbryt-button incomplete


feat: – när du lägger till en ny funktionalitet
fix: – när du rättar ett fel
refactor: – när du omstrukturerar utan ny funktion
docs: – när du ändrar dokumentation
test: – när du lägger till eller ändrar tester

----------------------------------------------------------------------

ATT GÖRA:
--------------
Om tid: 
Få in Header i ProductListView





DDD (Domain-Driven Design)
--------------------------
Domänen:      Produkthantering (området programmet handlar om)
Entities:     Product, Category, Manufacturer. Även kallat domänens kärnmodeller. Har alltid en unik Id-property, vilket är det som gör dem till entities.
DTOs:         ProductUpdateRequest, ProductRequest (Data Transfer Object - används bara för att flytta data mellan lager, ex. UI -> ProductService)
Repositories: ProductRepository, CategoryRepository, ManufacturerRepository
Service:      ProductService (samordnar logiken)

Domain =		 Entities och Interfaces (vad systemet är). Kataloger: Project Reference: None
Application =	 Use cases och affärslogik (vad systemet gör). Project Reference: Domain
Infrastructure = Repositories och teknik (hur systemet lagrar data). Project Reference: Domain
Presentation =	 UI/MVVM (hur användaren interagerar). Project Reference: Domain (Composition Root - DI-container)

WPF-element (också kallat kontroll): window, grid, button, slider, textbox etc.
På Window-elementet finns olika attribut: title, xmlns, x:Class, source (src)




