<!--Ange namespace (xmlns) för att kunna hämta upp klasser, properties och annan information 
    från Models och ViewModels. 
    d:DataContext =  anger vilket objekt bindningarna ska hämta data ifrån i designläge.
    Type= talar om vilken klass som ska användas för att skapa objektet (DataContext). I det här fallet ProductListViewModel från namespace viewmodels.
    d:DesignInstance: skapar en tillfällig instans av DataContext-objektet, vilket ger bindningsstöd och tillgång till properties som finns i viewmodeln.  
    Designläge: med andra ord XAML-förhandsvisningen, inte när programmet körs. 
    
    Bygg programmet om DataContext blir blåmarkerat.

    {Binding Title} = hämta värdet från propertyn Title i det objekt som är satt som DataContext. Bara properties som är publika
    Command = ett sätt för view att anropa en metod i viewmodeln. Med Command-binding på en Button säger Command: när knappen klickas, kör den här metoden
    
    Få ut produkterna i listan:
    
-->
    
    
    
    <UserControl x:Class="Presentation.Views.ProductListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Presentation.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
            
    </Grid>
</UserControl>
